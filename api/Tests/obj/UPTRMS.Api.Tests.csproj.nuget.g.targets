<?xml version="1.0" encoding="utf-8" standalone="no"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ImportGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <Import Project="$(NuGetPackageRoot)/xunit.core/2.6.2/build/xunit.core.targets" Condition="Exists('$(NuGetPackageRoot)/xunit.core/2.6.2/build/xunit.core.targets')" />
    <Import Project="$(NuGetPackageRoot)/system.text.json/9.0.0/buildTransitive/net8.0/System.Text.Json.targets" Condition="Exists('$(NuGetPackageRoot)/system.text.json/9.0.0/buildTransitive/net8.0/System.Text.Json.targets')" />
    <Import Project="$(NuGetPackageRoot)/microsoft.extensions.configuration.binder/9.0.0/buildTransitive/netstandard2.0/Microsoft.Extensions.Configuration.Binder.targets" Condition="Exists('$(NuGetPackageRoot)/microsoft.extensions.configuration.binder/9.0.0/buildTransitive/netstandard2.0/Microsoft.Extensions.Configuration.Binder.targets')" />
    <Import Project="$(NuGetPackageRoot)/microsoft.extensions.options/9.0.0/buildTransitive/net8.0/Microsoft.Extensions.Options.targets" Condition="Exists('$(NuGetPackageRoot)/microsoft.extensions.options/9.0.0/buildTransitive/net8.0/Microsoft.Extensions.Options.targets')" />
    <Import Project="$(NuGetPackageRoot)/microsoft.extensions.logging.abstractions/9.0.0/buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets" Condition="Exists('$(NuGetPackageRoot)/microsoft.extensions.logging.abstractions/9.0.0/buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets')" />
    <Import Project="$(NuGetPackageRoot)/mono.texttemplating/3.0.0/buildTransitive/Mono.TextTemplating.targets" Condition="Exists('$(NuGetPackageRoot)/mono.texttemplating/3.0.0/buildTransitive/Mono.TextTemplating.targets')" />
    <Import Project="$(NuGetPackageRoot)/microsoft.extensions.configuration.usersecrets/9.0.0/buildTransitive/net8.0/Microsoft.Extensions.Configuration.UserSecrets.targets" Condition="Exists('$(NuGetPackageRoot)/microsoft.extensions.configuration.usersecrets/9.0.0/buildTransitive/net8.0/Microsoft.Extensions.Configuration.UserSecrets.targets')" />
    <Import Project="$(NuGetPackageRoot)/microsoft.codeanalysis.analyzers/3.3.4/buildTransitive/Microsoft.CodeAnalysis.Analyzers.targets" Condition="Exists('$(NuGetPackageRoot)/microsoft.codeanalysis.analyzers/3.3.4/buildTransitive/Microsoft.CodeAnalysis.Analyzers.targets')" />
    <Import Project="$(NuGetPackageRoot)/specflow/3.9.74/build/SpecFlow.targets" Condition="Exists('$(NuGetPackageRoot)/specflow/3.9.74/build/SpecFlow.targets')" />
    <Import Project="$(NuGetPackageRoot)/specflow.tools.msbuild.generation/3.9.74/build/SpecFlow.Tools.MsBuild.Generation.targets" Condition="Exists('$(NuGetPackageRoot)/specflow.tools.msbuild.generation/3.9.74/build/SpecFlow.Tools.MsBuild.Generation.targets')" />
    <Import Project="$(NuGetPackageRoot)/specflow.xunit/3.9.74/build/SpecFlow.xUnit.targets" Condition="Exists('$(NuGetPackageRoot)/specflow.xunit/3.9.74/build/SpecFlow.xUnit.targets')" />
    <Import Project="$(NuGetPackageRoot)/specflow.plus.livingdocplugin/3.9.57/build/SpecFlow.Plus.LivingDocPlugin.targets" Condition="Exists('$(NuGetPackageRoot)/specflow.plus.livingdocplugin/3.9.57/build/SpecFlow.Plus.LivingDocPlugin.targets')" />
    <Import Project="$(NuGetPackageRoot)/microsoft.codecoverage/17.8.0/build/netstandard2.0/Microsoft.CodeCoverage.targets" Condition="Exists('$(NuGetPackageRoot)/microsoft.codecoverage/17.8.0/build/netstandard2.0/Microsoft.CodeCoverage.targets')" />
    <Import Project="$(NuGetPackageRoot)/microsoft.net.test.sdk/17.8.0/build/netcoreapp3.1/Microsoft.NET.Test.Sdk.targets" Condition="Exists('$(NuGetPackageRoot)/microsoft.net.test.sdk/17.8.0/build/netcoreapp3.1/Microsoft.NET.Test.Sdk.targets')" />
    <Import Project="$(NuGetPackageRoot)/microsoft.aspnetcore.mvc.testing/9.0.0/buildTransitive/net9.0/Microsoft.AspNetCore.Mvc.Testing.targets" Condition="Exists('$(NuGetPackageRoot)/microsoft.aspnetcore.mvc.testing/9.0.0/buildTransitive/net9.0/Microsoft.AspNetCore.Mvc.Testing.targets')" />
    <Import Project="$(NuGetPackageRoot)/coverlet.msbuild/6.0.0/build/coverlet.msbuild.targets" Condition="Exists('$(NuGetPackageRoot)/coverlet.msbuild/6.0.0/build/coverlet.msbuild.targets')" />
    <Import Project="$(NuGetPackageRoot)/coverlet.collector/6.0.0/build/netstandard1.0/coverlet.collector.targets" Condition="Exists('$(NuGetPackageRoot)/coverlet.collector/6.0.0/build/netstandard1.0/coverlet.collector.targets')" />
  </ImportGroup>
</Project>