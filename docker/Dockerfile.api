# Multi-stage Dockerfile for UPTRMS API
# Stage 1: Build
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Copy solution and project files
COPY ["TherapyDocs.Api.csproj", "."]
COPY ["Directory.Build.props", "."]
COPY ["nuget.config", "."]

# Restore dependencies
RUN dotnet restore "TherapyDocs.Api.csproj"

# Copy source code
COPY . .

# Build application
RUN dotnet build "TherapyDocs.Api.csproj" -c Release -o /app/build

# Run tests with coverage
FROM build AS test
RUN dotnet test "TherapyDocs.Api.csproj" -c Release \
    --collect:"XPlat Code Coverage" \
    --results-directory /app/TestResults \
    -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura

# Verify 100% code coverage
RUN coverage_percentage=$(grep -oP 'line-rate="[0-9.]+' /app/TestResults/*/coverage.cobertura.xml | grep -oP '[0-9.]+' | head -1) && \
    coverage_int=$(echo "$coverage_percentage * 100" | bc | cut -d. -f1) && \
    if [ "$coverage_int" -lt 100 ]; then \
        echo "Code coverage is $coverage_int%, but 100% is required!" && \
        exit 1; \
    fi

# Publish application
FROM build AS publish
RUN dotnet publish "TherapyDocs.Api.csproj" -c Release -o /app/publish /p:UseAppHost=false

# Stage 2: Runtime
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS final
WORKDIR /app

# Install security updates
RUN apt-get update && apt-get upgrade -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Copy published application
COPY --from=publish /app/publish .

# Set up health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Security headers and configurations
ENV ASPNETCORE_URLS=http://+:8080 \
    ASPNETCORE_ENVIRONMENT=Production \
    # Security headers
    ASPNETCORE_HTTPS_PORT=443 \
    ASPNETCORE_HSTS_ENABLED=true \
    ASPNETCORE_HSTS_MAXAGE=31536000 \
    ASPNETCORE_HSTS_INCLUDESUBDOMAINS=true \
    ASPNETCORE_HSTS_PRELOAD=true \
    # Kestrel limits
    ASPNETCORE_Kestrel__Limits__MaxConcurrentConnections=1000 \
    ASPNETCORE_Kestrel__Limits__MaxConcurrentUpgradedConnections=1000 \
    ASPNETCORE_Kestrel__Limits__MaxRequestBodySize=10485760 \
    ASPNETCORE_Kestrel__Limits__RequestHeadersTimeout=00:00:30 \
    # Logging
    Logging__Console__DisableColors=true \
    Logging__Console__FormatterName=Json

# Add metadata
ARG VERSION=dev
ARG BUILD_DATE
ARG VCS_REF
LABEL org.opencontainers.image.title="UPTRMS API" \
      org.opencontainers.image.description="Unified Pediatric Therapy Resource Management System API" \
      org.opencontainers.image.version="${VERSION}" \
      org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.vendor="UPTRMS" \
      org.opencontainers.image.licenses="Proprietary" \
      org.opencontainers.image.source="https://github.com/uptrms/pediatric-therapy-resource"

# Expose port
EXPOSE 8080

# Switch to non-root user
USER appuser

# Start application
ENTRYPOINT ["dotnet", "TherapyDocs.Api.dll"]