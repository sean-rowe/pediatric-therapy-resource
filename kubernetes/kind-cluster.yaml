# Kind cluster configuration for UPTRMS
# Simulates a 3-node Kubernetes cluster for local development
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: uptrms-local
networking:
  # Enable IPv6 for future compatibility
  ipFamily: dual
  # API server port
  apiServerPort: 6443
  # Pod subnet (IPv4)
  podSubnet: "10.244.0.0/16"
  # Service subnet (IPv4)
  serviceSubnet: "10.96.0.0/12"
  # Disable default CNI to install Istio
  disableDefaultCNI: false
  # Port mappings for local development
  kubeProxyMode: "ipvs"
nodes:
  # Control plane node
  - role: control-plane
    # Extra mounts for persistent data
    extraMounts:
      - hostPath: ./data/etcd
        containerPath: /var/lib/etcd
        readOnly: false
      - hostPath: ./data/containerd
        containerPath: /var/lib/containerd
        readOnly: false
    # Port mappings for local access
    extraPortMappings:
      # HTTPS ingress
      - containerPort: 443
        hostPort: 443
        protocol: TCP
      # HTTP ingress
      - containerPort: 80
        hostPort: 80
        protocol: TCP
      # MSSQL
      - containerPort: 1433
        hostPort: 1433
        protocol: TCP
      # Redis
      - containerPort: 6379
        hostPort: 6379
        protocol: TCP
      # RabbitMQ Management
      - containerPort: 15672
        hostPort: 15672
        protocol: TCP
      # MinIO Console
      - containerPort: 9001
        hostPort: 9001
        protocol: TCP
      # Prometheus
      - containerPort: 9090
        hostPort: 9090
        protocol: TCP
      # Grafana
      - containerPort: 3000
        hostPort: 3000
        protocol: TCP
    # Control plane configuration
    kubeadmConfigPatches:
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "ingress-ready=true"
      - |
        kind: ClusterConfiguration
        controllerManager:
          extraArgs:
            bind-address: "0.0.0.0"
        scheduler:
          extraArgs:
            bind-address: "0.0.0.0"
        apiServer:
          extraArgs:
            enable-admission-plugins: "PodSecurityPolicy"
            audit-log-path: "/var/log/kubernetes/audit.log"
            audit-log-maxage: "30"
            audit-log-maxbackup: "3"
            audit-log-maxsize: "100"
  # Worker node 1
  - role: worker
    extraMounts:
      - hostPath: ./data/worker1
        containerPath: /var/lib/containerd
        readOnly: false
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "node-type=worker,zone=zone-a"
  # Worker node 2
  - role: worker
    extraMounts:
      - hostPath: ./data/worker2
        containerPath: /var/lib/containerd
        readOnly: false
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "node-type=worker,zone=zone-b"
# Feature gates for advanced features
featureGates:
  EphemeralContainers: true
  # Enable Pod Security Standards
  PodSecurity: true
# Runtime configuration
containerdConfigPatches:
  - |-
    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."localhost:5000"]
      endpoint = ["http://kind-registry:5000"]